local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "Anime Power Defend",
    Icon = 0,
    LoadingTitle = "Kronox Hub",
    LoadingSubtitle = "by Kronox",
    Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes
 
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface
 
    ConfigurationSaving = {
       Enabled = true,
       FolderName = nil, -- Create a custom folder for your hub/game
       FileName = "Big Hub"
    },
 
    Discord = {
       Enabled = true,
       Invite = "https://discord.gg/Fe6qgASR",
       RememberJoins = true,
    },
 
    KeySystem = true, -- Set this to true to use our key system
    KeySettings = {
       Title = "Key",
       Subtitle = "Key System",
       Note = "Join Discord", -- Use this to tell the user how to get a key
       FileName = "Kronox", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
       SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = {"Welcome"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
    }
 })

 local Tab = Window:CreateTab("Main", 4483362458)
 local Section = Tab:CreateSection("Setting")


 Rayfield:Notify({
    Title = "Macro",
    Content = "Record Start",
    Duration = 5.0,
    Image = nil,
})

local Tab = Window:CreateTab("Macro", 4483362458)
local Section = Tab:CreateSection("Macro")

-- Presupunând că "Tab" este obiectul tău pentru UI
local ButtonPlayMacro = Tab:CreateButton({
    Name = "Play Macro",
    Callback = function()
        playMacro() -- Apelează funcția playMacro
    end,
 })
 
 local ButtonRecordMacro = Tab:CreateButton({
    Name = "Record Macro",
    Callback = function()
        recordMacro() -- Apelează funcția recordMacro
    end,
 })
 


 -- Necesită JSON Library (Poți folosi o bibliotecă JSON, cum ar fi dkjson)
local HttpService = game:GetService("HttpService")

-- Calea către fișierul JSON
local macroFileName = "macro.json"

-- Funcția pentru a salva un macro în JSON
local function saveMacro(macroData)
    local jsonData = HttpService:JSONEncode(macroData) -- Convertim tabelul în JSON
    writefile(macroFileName, jsonData) -- Salvăm JSON în fișier
    print("Macro salvat în: " .. macroFileName)
end

-- Funcția pentru a încărca macro-ul din JSON
local function loadMacro()
    if isfile(macroFileName) then
        local jsonData = readfile(macroFileName) -- Citim conținutul JSON
        return HttpService:JSONDecode(jsonData) -- Convertim JSON-ul în tabel Lua
    else
        print("Nu există fișierul macro!")
        return {}
    end
end

-- Funcția pentru a înregistra acțiuni
local function recordMacro()
    local macroData = {}
    print("Înregistrează acțiuni pentru macro. Apasă ESC pentru a opri înregistrarea.")
    
    -- Exemplu de acțiune: Plasarea unei unități
    local function onPlaceUnit(unitName, position)
        table.insert(macroData, {
            action = "PlaceUnit",
            unit = unitName,
            position = position
        })
        print("Unitate înregistrată:", unitName, position)
    end
    
    -- Exemplu de implementare simplă (pseudocod pentru plasarea unei unități):
    -- Înlocuiește funcția de mai jos cu legături reale la evenimentele jocului
    onPlaceUnit("Unit1", Vector3.new(0, 0, 0)) -- Înlocuiește cu date reale
    onPlaceUnit("Unit2", Vector3.new(10, 0, 0)) -- Înlocuiește cu date reale
    
    -- Oprește înregistrarea
    wait(10) -- Simulează o durată pentru înregistrare
    saveMacro(macroData)
end

-- Funcția pentru a reda macro-ul
local function playMacro()
    local macroData = loadMacro()
    if #macroData == 0 then
        print("Nu există acțiuni în macro!")
        return
    end

    for _, action in ipairs(macroData) do
        if action.action == "PlaceUnit" then
            -- Exemplu de execuție (Plasează unități la poziții salvate)
            print("Plasez unitatea:", action.unit, "la poziția:", action.position)
            -- Înlocuiește cu apeluri către funcțiile reale din jocul tău
            -- Ex: PlaceUnit(action.unit, action.position)
        end
        wait(1) -- Pauză între acțiuni
    end
    print("Redarea macro-ului s-a terminat.")
end

-- Exemplu de utilizare:
recordMacro() -- Înregistrează un macro
playMacro()   -- Rulează macro-ul înregistrat
